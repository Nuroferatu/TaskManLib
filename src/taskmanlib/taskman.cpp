//                                    .-""-.
//                                   / _  _ \
//                                   |(_)(_)|
// .------------------------------ooO(_ /\ _)Ooo-----------------------------.
// |                                  |====|                                 |
// |                                  '-..-'                                 |
// | Desc:     TaskMan - Async Task Manager                                  |
// | By:       Nuroferatu - https://github.com/Nuroferatu                    |
// '-------------------------------------------------------------------------'
// ----= Change log =---------------------------------------------------------
//   1. 2017.11.22, 19:10    [+] Initial
// ---------------------------------------------------------------------------
#include "taskman.h"

#include <assert.h>
#include <iostream>

using namespace std;

// ---------------------------------------------------------------------------
// Constructor / Destructor
// ---------------------------------------------------------------------------
TaskMan::TaskMan() {
    running = false;
}

TaskMan::~TaskMan() {
    assert( !running );
}

// ---------------------------------------------------------------------------
// onInit
// ---------------------------------------------------------------------------
void TaskMan::onInit( int workersCount ) {
    running = true;
    cout << "TaskMan::onInit with " << workersCount << " working threads" << endl;
}

// ---------------------------------------------------------------------------
// onShutdown
// ---------------------------------------------------------------------------
void TaskMan::onShutdown( void ) {
    cout << "TaskMan::onShutdown" << endl;
    running = false;
}

// ---------------------------------------------------------------------------
// addTask
// ---------------------------------------------------------------------------
void TaskMan::addTask( ITask* task ) {
    assert( task != nullptr );
    if ( task )
        task->execute();
}

/* EOF */